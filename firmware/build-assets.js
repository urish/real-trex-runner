const fs = require('fs');
const path = require('path');
const bitmap = require('./util/bitmap');

function pad(bitmap) {
  while (bitmap.length % 4) {
    bitmap = [].concat(bitmap, [0]);
  }
  return bitmap;
}

let outputFile = fs.openSync(path.resolve('dist', 'bitmaps.js'), 'w');
fs.writeSync(outputFile, `
  // This file is auto-generated by built-assets.js, do not edit!

  const Storage = require('Storage');
`.trim().replace(/\n  /g, '\n') + '\n');

let assetsOutputFile = fs.openSync('src/assets.js', 'w');
fs.writeSync(assetsOutputFile, `
  // This file is auto-generated by built-assets.js, do not edit!
  const Storage = require('Storage');

  module.exports = {    
`.trim().replace(/\n  /g, '\n') + '\n')

let counter = 0;

function buildAsset(filePath, assetName) {
  const bitmapData = fs.readFileSync(filePath).toString();
  const image = bitmap.toBitmap(bitmapData);
  const paddedBitmap = pad(image.bitmap);
  const encoded = bitmap.encode(paddedBitmap);
  const fileName = `font-${counter++}`;
  fs.writeSync(outputFile,
    `Storage.write('${fileName}', atob('${encoded}'));\n`);
  fs.writeSync(assetsOutputFile,
    `  ${assetName}: Storage.read('${fileName}'), // ${image.width}x${image.height}\n`);
}

for (let fileName of fs.readdirSync('assets')) {
  if (path.extname(fileName).toLowerCase() === '.txt') {
    buildAsset('assets/' + fileName, path.parse(fileName).name);
  }
}

for (let fileName of fs.readdirSync('assets/small')) {
  if (path.extname(fileName).toLowerCase() === '.txt') {
    buildAsset('assets/small/' + fileName, 's' + path.parse(fileName).name);
  }
}

fs.writeSync(assetsOutputFile, `}\n`);
